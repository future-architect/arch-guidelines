import{_ as t,c as s,o as i,a4 as e}from"./chunks/framework.BJEXY-5A.js";const u=JSON.parse('{"title":"docs","description":"","frontmatter":{},"headers":[],"relativePath":"documents/forMarkdown/future_muscle_partner/docs/README.md","filePath":"documents/forMarkdown/future_muscle_partner/docs/README.md"}'),d={name:"documents/forMarkdown/future_muscle_partner/docs/README.md"};function l(n,a,r,h,p,o){return i(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="docs" tabindex="-1">docs <a class="header-anchor" href="#docs" aria-label="Permalink to &quot;docs&quot;">​</a></h1><p>設計ドキュメントを管理する。</p><h2 id="フォルダ階層" tabindex="-1">フォルダ階層 <a class="header-anchor" href="#フォルダ階層" aria-label="Permalink to &quot;フォルダ階層&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01_画面</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Figma、画面アクション</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 02_WebAPI</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # openapi.yaml、API処理設計</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 03_データ</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # erd.a5er（ERD）、区分値</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="設計書" tabindex="-1">設計書 <a class="header-anchor" href="#設計書" aria-label="Permalink to &quot;設計書&quot;">​</a></h2><ul><li><a href="./01_画面/">01_画面</a></li><li><a href="./02_WebAPI/">02_WebAPI</a></li><li><a href="./03_データ/">03_データ</a></li></ul><h2 id="コード体系" tabindex="-1">コード体系 <a class="header-anchor" href="#コード体系" aria-label="Permalink to &quot;コード体系&quot;">​</a></h2><p>機能IDのコード体系は以下に従う。</p><table tabindex="0"><thead><tr><th>種別</th><th>種別</th><th>例</th><th>備考</th></tr></thead><tbody><tr><td>UIS</td><td>通常画面</td><td>UIS01、UIS02</td><td>UI Standard から</td></tr><tr><td>UIM</td><td>モーダル画面</td><td>UIM01、UIM02</td><td>UI Mordal から</td></tr><tr><td>API</td><td>Web API</td><td>API01、API02</td><td></td></tr><tr><td>IFS</td><td>システムI/F 送信</td><td>IFS01、IFS02</td><td>InterFace Send から</td></tr><tr><td>IFR</td><td>システムI/F 受信</td><td>IFR01、IFR02</td><td>InterFace Receive から</td></tr><tr><td>BAT</td><td>バッチ</td><td>BAT01、BAT02</td><td>BATch から</td></tr><tr><td>RPT</td><td>帳票</td><td>RPT01、RPT02</td><td>RePorT から</td></tr></tbody></table><p>コード体系について補足:</p><ul><li>UISであれば、 <code>UIS(0[1-9]{1}|[0-9]{2}</code> といったフォーマットに従うこと</li><li>Future Muscle Partnerのプロダクト規模であれば、機能数が爆発しないという想定で2桁とする <ul><li>万が一あぶれた場合、16進数と見なしてA~Fを導入する拡張を行う</li></ul></li></ul><p>機能IDの採番について注意点:</p><ul><li>採番後の変更は許可しない</li><li>連番とする（数字部分に新しい体系を作らない）</li></ul><h2 id="画面設計書の記載方針" tabindex="-1">画面設計書の記載方針 <a class="header-anchor" href="#画面設計書の記載方針" aria-label="Permalink to &quot;画面設計書の記載方針&quot;">​</a></h2><ul><li>Web API の応答項目が、画面項目のどこにマッピングすべきかという情報は、多くの業務画面で重要である <ul><li>理由は、類似名称の項目がWeb API応答項目にも画面項目多く、紐づけの認識の齟齬が生じやすいからである</li></ul></li><li>future muscle partnerにおいては、項目数は多くなくFigmaを見れば自明であるため、画面項目定義を省略する</li></ul>`,15)])])}const k=t(d,[["render",l]]);export{u as __pageData,k as default};
